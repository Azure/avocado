trigger:
  - main

extends:
  template: /eng/1es-redirect.yml
  parameters:
    stages:
    - stage: Build_And_Test
      displayName: 'Build and Test'

      variables:
        - template: /eng/image.yml

      jobs:
      - job: Build
        pool:
          image: $(LINUXVMIMAGE)
          name: $(LINUXPOOL)
          os: linux
        steps:
          - task: NodeTool@0
            displayName: 'Install Node'
            inputs:
              versionSpec: 20.x

          - script: npm ci
            displayName: 'npm ci'

          - script: npm ls -a
            displayName: 'npm ls -a'
            condition: succeededOrFailed()
            continueOnError: true

          - task: Npm@1
            displayName: 'npm pack'
            inputs:
              command: custom
              verbose: false
              customCommand: pack

          - task: CopyFiles@2
            displayName: 'Copy Files to: drop'
            inputs:
              Contents: '*.tgz'
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - template: /eng/publish-1es-artifact.yml
            parameters:
              artifactName: 'drop'
              artifactPath: '$(Build.ArtifactStagingDirectory)'

      - job: Test_Windows
        strategy:
          matrix:
            Win.Node18:
              node.version: 18.x
            Win.Node20:
              node.version: 20.x
        pool:
          image: $(WINDOWSVMIMAGE)
          name: $(WINDOWSPOOL)
          os: windows
        steps:
          - template: /eng/test-steps.yml
            parameters:
              version: $(node.version)

      - job: Test_Linux
        strategy:
          matrix:
            Linux.Node18:
              node.version: 18.x
            Linux.Node20:
              node.version: 20.x
        pool:
          image: $(LINUXVMIMAGE)
          name: $(LINUXPOOL)
          os: linux
        steps:
          - template: /eng/test-steps.yml
            parameters:
              version: $(node.version)

    # only include if running on `internal` build with manual queue, otherwise never include
    - ${{ if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
      - stage: Publish
        displayName: Publish
        dependsOn: Build_And_Test

        jobs:
          - deployment: Publish
            environment: 'package-publish'
            pool:
              name: azsdk-pool
              image: ubuntu-24.04
              os: linux

            strategy:
              runOnce:
                deploy:
                  steps:
                  - checkout: self
                    submodules: false

                  - download: current
                    artifact: drop
                    timeoutInMinutes: 5

                  - task: PowerShell@2
                    inputs:
                      filePath: '$(Build.SourcesDirectory)/eng/scripts/determine-release-tag.ps1'
                      failOnStderr: true
                      pwsh: true

                  - pwsh: |
                      Write-Host "Will deploy with tag of $(Tag)"
                      Get-ChildItem "$(Pipeline.Workspace)/drop" -Recurse -Force `
                        | Where-Object { $_.Name -like "*.tgz" } `
                        | Copy-Item -Destination "$(Build.ArtifactStagingDirectory)"

                      Get-ChildItem "$(Build.ArtifactStagingDirectory)" -Recurse -Force | % { Write-Host $_.FullName }
                    displayName: Move artifact to $(Build.ArtifactStagingDirectory)

                  - task: EsrpRelease@9
                    displayName: 'Publish oav to ESRP'
                    inputs:
                      ConnectedServiceName: 'Azure SDK PME Managed Identity'
                      ClientId: '5f81938c-2544-4f1f-9251-dd9de5b8a81b'
                      DomainTenantId: '975f013f-7f24-47e8-a7d3-abc4752bf346'
                      UseManagedIdentity: true
                      KeyVaultName: 'kv-azuresdk-codesign'
                      SignCertName: 'azure-sdk-esrp-release-certificate'
                      Intent: 'PackageDistribution'
                      ContentType: 'npm'
                      FolderLocation: $(Build.ArtifactStagingDirectory)
                      Owners: ${{ coalesce(variables['Build.RequestedForEmail'], 'azuresdk@microsoft.com') }}
                      Approvers: 'azuresdk@microsoft.com'
                      ServiceEndpointUrl: 'https://api.esrp.microsoft.com'
                      MainPublisher: 'ESRPRELPACMANTEST'
                      productstate: $(Tag)
